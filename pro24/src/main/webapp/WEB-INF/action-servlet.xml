<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">

<!-- 1번에 해당하는것 -->
	
	<bean id="memberUrlMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/member/*.do">memberController</prop>
			</props>
		</property>
	</bean>
	
	
	
	<bean id="memberController"
		class="com.spring.member.controller.MemberControllerImpl">
			
			
			
		<property name="methodNameResolver">
			<ref local="memberMethodNameResolver" />
		</property>
		
		<property name="memberService" ref="memberService" />
	</bean>

	<bean id="memberMethodNameResolver"
		class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver">
		<property name="mappings">
			<props>
				<prop key="/member/listMembers.do">listMembers</prop>
				<prop key="/member/addMember.do">addMember</prop>
				<prop key="/member/removeMember.do">removeMember</prop>
				<prop key="/member/memberForm.do">form</prop>
			</props>
		</property>
	</bean>


<!-- 2번에 해당하는것 -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/member/" />
		<property name="suffix" value=".jsp" />
	</bean>
	

</beans>


<!-- 

<2>

actionservlet안에 자원은 bean객체로 생성이된다
객체를 두개로 나눠서 만들기 

 디스패치 서블릿하는 역할
1.컨트롤러 & 메서드 호출 

SimpleUrlHandlerMapping객체생성
객체를 생성 시킨다는것은 메모리 점유한다는 내용이다
그안에 있는 필드:mappings안에 값을 넣는데 매핑컨트롤러의 주소값을 넣는것인데 어떻게 넣냐면 /member/*.do로한다
디스패치가 처음에 /member/cy.do로 하면 membercontroller에 해당하는 주소를 mappings에 담아서 열어준다
멤버컨트롤러가 갖고있는 주소는 membercontrollerImpl의 주소이다.


membercontrollerImpl 클래스에 해당하는 주소로 진입할 수 있다. 클래스만 열리는것 :메소드가 실행될 수 는 없다. 

membercontrollerImpl객체를 생성할때 (bean태그로 객체생성) property는 set으로 처리하는것이다 
그런데 그러면 set을 통해서 methodNameResolver랑 memberService가 있어야하는데 membercontroller에 있어야하는데 없다?!!!!
super을 통해서 multiactioncontroller의 멤버 필드(=0)에 값이 채워지는것이다. 어디냐면 local 즉 memberMethodNameResolver에 주소를 넣어라

PropertiesMethodNameResolver객체는 어떤 멤버를 갖고있느지 살피기 mappings->list형

ex)
1차멤버 member / 2차매핑 listmember.do/listmembers컨텐츠 
멤버 컨트롤러에 해당하는것을 열어주면 객체가 membercontrollerimpl이 열린다
해당하는 메서드를 실행한다

<쉽게 생각하면>
SimpleUrlHandlerMapping는 클래스 열어주기
PropertiesMethodNameResolver는 많지만 클래스 열어진 상태에서 맞는 메서드를 열어주는 역할. 단 키값이 맞다면


2.모든 처리를 한후 컨트롤러로 들어온것을 기반으로 하여 값을 저장후 그 값을 받을 페이지를 호출하는 역할을 한다.
InternalResourceViewResolver객체를 생성해서 dispatch servlet을 주는데
 dispatch servlet 은 필드 viewClass,prefix,suffix부분을 사용한다. 
 viewClass는 jstml 출력view 을 열려준다.
 prefix는 string으로 chaeyeon이라고 쳤다면 chaeyeon앞에 붙이는 테두리라고 생각하면된다. 
 
 그리고 suffix를 통해서 .jsp가 열린다


이렇게 객체로 두개로 나눠서 만들기


그렇다면 여기서 의문..!!!!
dispatchservlet가 실행이되어야 이 모든것들이 설명이되는데 그렇다면 d.s는 어떻게 실행이되었는가 !!
 > 바로 web.xml에서 
더블클릭x ,누군가가 호출해야한다 listener클래스가 호출된다




 -->
 

